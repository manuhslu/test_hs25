###############################################################
# 🎓 HSLU DIGITAL CONSTRUCTION - PYTHON & GITHUB GUIDE
# Projekt: DT_Programmieren
# Umgebung: myenv
# Autor: manuhslu
###############################################################


🧩 1️⃣  VIRTUELLE UMGEBUNG (myenv)
----------------------------------
⚙️ Erstellen (nur einmal nötig)
> python -m venv myenv

🚀 Aktivieren (Windows)
> myenv\Scripts\activate

⏹️ Deaktivieren
> myenv\Scripts\deactivate.bat

🔍 Kontrolle:
> where python
> pip show streamlit

💡 Wenn "(myenv)" vor der Befehlszeile steht, ist deine Umgebung aktiv.


📦 2️⃣  MODULE INSTALLIEREN
---------------------------
📦 Installiere die wichtigsten Bibliotheken:
> pip install streamlit
> pip install pandas
> pip install matplotlib
> pip install ifcopenshell
> pip install customtkinter

🧾 Umgebung speichern:
> pip freeze > requirements.txt

💡 Die Datei "requirements.txt" dokumentiert alle installierten Pakete.


🚀 3️⃣  STREAMLIT STARTEN
--------------------------
▶️ App starten:
> python -m streamlit run xyz.py

⏹️ Beenden:
> Ctrl + C

💡 Wenn sich dein Browser öffnet (http://localhost:8501), läuft Streamlit korrekt.


🔄 4️⃣  GITHUB WORKFLOW
-----------------------
🔍 Status prüfen:
> git status

🟩 Neue Dateien hinzufügen:
> git add .

💬 Änderungen committen:
> git commit -m "Update Projekt"

☁️ Änderungen zu GitHub hochladen:
> git push

⬇️ Neueste Version von GitHub laden:
> git pull origin main


⚙️ 5️⃣  SCHNELLE AUTOMATION
----------------------------
⚡ Alles automatisch hochladen:
> git add . && git commit -m "Auto-Upload" && git push

📦 Alle Pakete sichern:
> pip freeze > requirements.txt


🧱 6️⃣  GIT STATUS-ANZEIGEN IN VS CODE
--------------------------------------
📁 Farben im Explorer:

🟩 Grün   → Neue Datei (Untracked)
🟠 Orange → Geändert (Modified)
⚪ Weiß   → Unverändert
⚫ Grau   → Ignoriert (z. B. myenv, __pycache__)

🔠 Buchstaben im Explorer:
U = Untracked (neu)
M = Modified (geändert)
A = Added (hinzugefügt)
D = Deleted (gelöscht)

💡 Vorgehen:
1️⃣ „U“ oder „M“ prüfen  
2️⃣ `git add .` ausführen  
3️⃣ `git commit -m "Beschreibung"`  
4️⃣ `git push`


�
